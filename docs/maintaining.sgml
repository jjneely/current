<!-- Maintaining your Current server trees -->
<section id="maintain"><title>Maintaining Your Server Trees</title>
<section id="maintintro"><title>Introduction</title>
<para>
So, you've gotten the Current server set up, and the clients are now talking
to it and getting updates from it, right?  OK, so what happens when Red Hat 
releases a new errata package or security update, or when you fix a bug in one
of your custom packages and need to push it out - how does the server know
about the update?  That's what we're going to cover in this section of the
manual.
</para>
<para>
Updating the Current server is actually a two-part process; the first step is
to update the on-disk packages.  In versions of Current after about 0.9.5, you
don't have to worry about having multiple versions of a given package on disk,
Current will select the package that's newest according to RPM version
comparison methods.  This makes updating the trees on disk relatively trivial;
for my testing, I simply use rsync to update my local copy of the 
<filename>updates</filename> tree from a Red Hat mirror; the original tree is
not touched, and only new packages are added.  Nothing is ever deleted, there's
no nasty shell script to look at file names, it's a simple, single command.
How you choose to maintain the on-disk trees is totally up to you; Current was
designed to make this as painless as possible.
</para>
<para>
Now that the on-disk package trees have been updated, we need to tell the
server about the new packages.  At the present time, you must deactivate the
actual server (by issuing a <command>service httpd stop</command> for versions
1.3 and later) before updating the database; in future versions (i.e. when SQL
support comes back to the fore-front) we will be able to update the database
without first turning off the actual server.  When we first created the server,
we issued a <quote>create</quote> command to tell <command>cadmin</command> 
to create the channel(s) we wanted from scratch, like thus:
<screen>
# cadmin create &lt;channel name&gt;
</screen>
Since we don't want to completely delete and recreate the channel, we now
issue an <quote>update</quote> command, like thus:
<screen>
# cadmin update &lt;channel name&gt;
</screen>
The output for this command will be similar to the output for the create
command, especially if you increase the verbosity.  The difference is that
the <quote>create</quote> command truncates the database files before opening
whereas the <quote>update</quote> command simply opens the files for writing,
preserving old data.
</para>
<para>
Once you've updated the databases, it's a good idea to check their sanity by
issuing a <quote>check</quote> command to <command>cadmin</command>:
<screen>
# cadmin check &lt;channel name&gt;
</screen>
This will perform a few sanity checks on the database to make sure it actually
matches up with he on-disk packages.
</para>
<para>
Now that the database has been updated, you can restart the Current server
(with <command>service httpd start</command>), and happily update all your
clients with the new packages.
</para>
</section>
</section>
