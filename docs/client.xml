<!--  Client configuration for use with a Current server -->
<chapter id="clients"><title>Client Configuration</title>
<section id="clientintro"><title>Introduction to the Client</title>
<para>
When you install a stock Red Hat Linux system, it comes pre-configured to talk
to Red Hat's corporate servers for any registration or update requests.  This
makes perfect sense, since the Red Hat servers are the only official place to
obtain system updates for your Red Hat Linux system.  With the advent of
Current, however, this configuration becomes a limitation, since there now
exists a way to provide an alternate source of package updates; a way that
works seamlessly with Red Hat's <command>up2date</command> client.
</para>
<para>
A functioning Current server, however, is somewhat useless without clients that
use it to obtain and install package updates.  The clients must then be
told about the new Current server by changing their configuration; there does
not yet exist an intuitive graphical interface for this, so we have to modify
the <command>rhn_register</command> and <command>up2date</command>
configuration files by hand.  Fortunately, this is fairly easy, thanks mostly
to the foresight of Red Hat in developing a sane and easy to understand
configuration file for these utilities.
</para>
</section>
<section id="certfile"><title>Certificate File</title>
<para>
When initializing the server, you will at some point be required to generate
a certificate file, which is used to encrypt and decrypt the SSL communication
channel used by <command>rhn_register</command> and <command>up2date</command>.
This certificate file must also be copied to all the client that will use the
new Current server for retrieving and installing package updates.  We will 
assume you place that file in <filename>/usr/share/rhn</filename> with the
name <filename>CURRENT-CA-CERT</filename> for the remainder of this document.
</para>
</section>
<section id="registerconfig"><title>Configuring Up2date</title>
  
<para>
The configuration file for <command>up2date</command> is located in
<filename>/etc/sysconfig/rhn/up2date</filename>.  It is a simple ASCII
text file, and the format is a simple key=value type, with no more than one 
key/value pair per line.
</para>

<note>
  <para>
    If you work working with clients using Red Hat Linux 7.3 or earlier
    you will need to modify <filename>/etc/sysconfig/rhn/rhn_register</filename>
    as well.  It contains similar information to the <command>up2date
    </command> configuration file.  This same modifications you make
    to the <command>up2date</command> configuration file need to be made
    here as well.
  </para>
</note>
    
<para>
There are three lines in this file we are concerned about.  The first one we
will cover deals with the certificate file generated by the user of Current
when first initializing the server.  The default setting, as shipped by Red Hat
is:
<screen>
sslCACert=/usr/share/rhn/RHNS-CA-CERT
</screen>
For our discussion, we will assume you have already places the certificate file
on the client system as discussed above, and given it the name 
<filename>CURRENT-CA-CERT</filename>.  To use that file, simply change the line
above to read:
<screen>
sslCACert=/usr/share/rhn/CURRENT-CA-CERT
</screen>
</para>
<para>
The other two lines we are concerned about are the lines giving the location of
both the SSL and non-SSL server(s) from which to actually retrieve package
information and actual packages.  Those two lines, as shipped by Red Hat, are:
<screen>
serverURL=https://www.rhns.redhat.com/XMLRPC
</screen>
for the SSL server, and
<screen>
noSSLServerURL=https://www.rhns.redhat.com/XMLRPC
</screen>
for the non-SSL server.  The portion you will need to modify is the hostname
portion of the URLs; if you modify the 
<computeroutput>/XMLRPC</computeroutput> portion of the URLs, neither 
<command>rhn_register</command> nor <command>up2date</command> will work with 
your Current server.  For my testing purposes, which involves using the same 
machine as both client and server, those lines appear in my configuration file 
as:
<screen>
serverURL=https://localhost/XMLRPC
</screen>
and
<screen>
noSSLServerURL=http://localhost/XMLRPC
</screen>
</para>

<para>
The next line of concern in the <filename>up2date</filename> configuration
file is not critical to normal operations, but needs to be mentioned for those
security-conscious individuals who use GPG to sign custom or modified packages.
In the default Red Hat configuration, there is a line:
<screen>
gpgKeyRing=/etc/sysconfig/rhn/up2date-keyring.gpg
</screen>
which tells the <command>up2date</command> client where to find the GPG key to
use to verify package signatures.  If you wish to use GPG signature
verification on the clients, you must either change this line to reflect the
location of the GPG key used to sign the packages (after putting that key into
a key ring on the client, of course), or you must add that key to the key ring
in the file specified.
</para>
<para>
Please note that if you choose to GPG sign your packages, you must use one of
the two above methods to allow signature checking; a recent change to RPM now
requires a signature check to pass if there is a GPG signature on the package.
This is not a behavior of Current or of <command>up2date</command>, but is
a behavior of RPM itself.
</para>
</section>
<section id="register-client"><title>Registering Your Clients</title>
<para>
After you've configured your clients, you can start updating them from your
Current server, right?  Sorry, but no - you <emphasis>must</emphasis>
register your clients with the Current server.  This can be done the
first time you run <command>up2date</command> or with the
<command>rhnreg_ks</command>.  Clients running Red Hat Linux 7.3 or
earlier should run the <command>rhn_register</command> command.
</para>
<para>
  Follow the directions given by one of the above commands for registration.
  Note that it really does not matter to Current when username or password
  you use.  The username, password, and most of the information handled
  in registration is not yet used by the Current server as Current does 
  not do client tracking.  However, it does register your client properly.
</para>
<para>
  If you client is already registered with the Red Hat Network you will need
  to unregister it.  This can be done by moving two files out of the way.
  They are <filename>/etc/sysconfig/rhn/up2date-uuid</filename> and
  <filename>/etc/sysconfig/rhn/systemid</filename>.  The Red Hat Network
  registration does not work with Current.
</para>
</section>
</chapter>
